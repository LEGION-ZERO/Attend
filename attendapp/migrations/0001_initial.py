# Generated by Django 3.1.2 on 2021-12-16 02:22

import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=56, verbose_name='部门名称')),
                ('id_delete', models.BooleanField(default=False, verbose_name='是否被删除')),
            ],
            options={
                'db_table': 'department',
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.CharField(max_length=56, primary_key=True, serialize=False, unique=True, verbose_name='权限编码')),
                ('name', models.CharField(max_length=56, verbose_name='权限名称')),
            ],
            options={
                'db_table': 'usermanage_permission',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=56, verbose_name='角色名称')),
                ('code', models.IntegerField(verbose_name='对应码')),
                ('permissions', models.ManyToManyField(related_name='permissions', to='attendapp.Permission')),
            ],
            options={
                'db_table': 'usermanage_role',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 30 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=30, unique=True, validators=[django.core.validators.RegexValidator('^[\\w.@+-]+$', 'Enter a valid username. This value may contain only letters, numbers and @/./+/-/_ characters.', 'invalid')], verbose_name='登陆账号')),
                ('password', models.CharField(max_length=256, verbose_name='password')),
                ('name', models.CharField(blank=True, max_length=64, null=True, verbose_name='用户姓名')),
                ('status', models.CharField(blank=True, max_length=256, null=True, verbose_name='在职状态')),
                ('is_superuser', models.IntegerField(default=0, verbose_name='是否超级用户')),
                ('email', models.CharField(blank=True, max_length=256, null=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*\\.[a-zA-Z0-9]{2,6}$', 'Enter a valid email. This value may contain only letters, numbers and @/./+/-/_ characters.', 'invalid')], verbose_name='邮箱')),
                ('wechat_id', models.CharField(blank=True, max_length=32, null=True, verbose_name='微信号')),
                ('phone', models.CharField(blank=True, max_length=56, null=True, verbose_name='电话')),
                ('error_password_count', models.IntegerField(null=True, verbose_name='密码输错次数')),
                ('forbidden_time', models.DateTimeField(null=True, verbose_name='禁止登录时间')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='attendapp.department', verbose_name='部门')),
                ('roles', models.ManyToManyField(related_name='roles', to='attendapp.Role', verbose_name='角色')),
            ],
            options={
                'db_table': 'usermanage_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
